delete:
  description: 'This API allows the deletion of any specified feature.

    It has three functionalities:

    - the deletion of the workflow that computes the feature

    - the updation of backbone workflows pertaining to this feature level and re-compute
    the corresponding data representations

    - deletion of the feature metadata from the registry config.


    The input to the API is a feature identifier which is a unique reference to this
    feature in the feature registry.'
  operationId: delete_feature_api_v1_features_v2__feature_id__delete
  parameters:
  - description: correlation id to track requests
    in: header
    name: x-correlation-id
    schema:
      type: string
  - description: This field describes the ID of the feature used to query the feature
      registry.
    in: path
    name: feature_id
    required: true
    schema:
      description: This field describes the ID of the feature used to query the feature
        registry.
      title: Feature Id
      type: string
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/FeatureDeleteResponse.yaml
      description: Successful Response
    '422':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/HTTPValidationError.yaml
      description: Validation Error
  summary: Delete Feature
  tags:
  - Features
get:
  description: 'This API allows the user to read metadata configuration pertaining
    to a feature identifier.

    By default, the API provides the latest metadata configuration which is present
    in the feature registry.

    The API also helps capture the end-to-end journey of this metadata by providing
    versioning, and hence captures data lineage in the metadata layer.

    Using the version parameter (which by default points to the latest version of
    the feature), we can obtain different versions of this metadata configuration.


    The input to this API is a feature identifier, which is mandatory. We can pass
    an optional version parameter as well - if not passed, it will point to the latest
    version of the data.

    The output of this API is all the metadata pertaining to the corresponding feature
    identifier.'
  operationId: get_feature_api_v1_features_v2__feature_id__get
  parameters:
  - description: correlation id to track requests
    in: header
    name: x-correlation-id
    schema:
      type: string
  - description: This field describes the ID of the feature used to query the feature
      registry.
    in: path
    name: feature_id
    required: true
    schema:
      description: This field describes the ID of the feature used to query the feature
        registry.
      title: Feature Id
      type: string
  - description: This field describes the version of the feature that will be parsed
      from the feature metadata lineage.
    in: query
    name: version
    required: false
    schema:
      default: 0
      description: This field describes the version of the feature that will be parsed
        from the feature metadata lineage.
      title: Version
      type: integer
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/FeatureReadResponse.yaml
      description: Successful Response
    '422':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/HTTPValidationError.yaml
      description: Validation Error
  summary: Get Feature
  tags:
  - Features
put:
  description: 'This API allows metadata updation for any specified feature and re-registers
    the metadata in the feature registry.

    Since data lineage is captured in the metadata layer, this API allows the functionality
    to store any updated version of the metadata as the latest version.

    It does not overwrite the existing configuration, but instead captures that as
    an older version, thus maintaining the end-to-end journey of the feature metadata.


    The input to this API is a feature identifier for which the update has to be done,
    and a corresponding metadata configuration that should be used as the latest metadata.'
  operationId: update_feature_api_v1_features_v2__feature_id__put
  parameters:
  - description: correlation id to track requests
    in: header
    name: x-correlation-id
    schema:
      type: string
  - description: This field describes the ID of the feature used to query the feature
      registry.
    in: path
    name: feature_id
    required: true
    schema:
      description: This field describes the ID of the feature used to query the feature
        registry.
      title: Feature Id
      type: string
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../../schemas/workflows/app__schemas__features_v2__Feature.yaml
    required: true
  responses:
    '200':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/FeatureUpdateResponse.yaml
      description: Successful Response
    '422':
      content:
        application/json:
          schema:
            $ref: ../../schemas/workflows/HTTPValidationError.yaml
      description: Validation Error
  summary: Update Feature
  tags:
  - Features
