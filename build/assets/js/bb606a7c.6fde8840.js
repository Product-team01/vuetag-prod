"use strict";(self.webpackChunkdyte_docs=self.webpackChunkdyte_docs||[]).push([[4807],{33070:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>u,default:()=>k,frontMatter:()=>s,metadata:()=>o,toc:()=>d});a(67294);var r=a(3905);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){return t=null!=t?t:{},Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):function(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))})),e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)a=l[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}const s={sidebar_position:1},u="Attribute Extraction - Asynchronous",o={unversionedId:"api-reference/async_tagging",id:"api-reference/async_tagging",title:"Attribute Extraction - Asynchronous",description:"This API returns AI powered product tags asynchronously. We also support sending back responses to a client hosted callback URL when the response is ready.",source:"@site/docs/guides/api-reference/async_tagging.mdx",sourceDirName:"api-reference",slug:"/api-reference/async_tagging",permalink:"/guides/api-reference/async_tagging",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"defaultSidebar",previous:{title:"Category",permalink:"/guides/Taxonomy/Home/Category"},next:{title:"Attribute Extraction - Feedback",permalink:"/guides/api-reference/tagging_feedback"}},p={},d=[{value:"Request",id:"request",level:3},{value:"Request Type",id:"request-type",level:4},{value:"Request Headers",id:"request-headers",level:4},{value:"Endpoint",id:"endpoint",level:4},{value:"Request Parameters",id:"request-parameters",level:4},{value:"Rule Object",id:"rule-object",level:4},{value:"Supported Rules",id:"supported-rules",level:4},{value:"Response",id:"response",level:3},{value:"Response Parameters",id:"response-parameters",level:4},{value:"Response Status Code",id:"response-status-code",level:4},{value:"Error Response Parameters",id:"error-response-parameters",level:4},{value:"Request to get the extract attributes for a given mad_id",id:"request-to-get-the-extract-attributes-for-a-given-mad_id",level:3},{value:"Request Type",id:"request-type-1",level:4},{value:"Request Headers",id:"request-headers-1",level:4},{value:"Endpoint",id:"endpoint-1",level:4},{value:"Request Parameters",id:"request-parameters-1",level:4},{value:"Response",id:"response-1",level:3},{value:"Response Parameters",id:"response-parameters-1",level:4},{value:"Response Status Code",id:"response-status-code-1",level:4},{value:"Error Response Parameters",id:"error-response-parameters-1",level:4},{value:"Request Structure",id:"request-structure",level:4},{value:"Response Structure",id:"response-structure",level:4},{value:"Request Structure",id:"request-structure-1",level:4}],m={toc:d};function k(e){var{components:t}=e,a=i(e,["components"]);return(0,r.kt)("wrapper",l(function(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{},r=Object.keys(a);"function"==typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(a).filter((function(e){return Object.getOwnPropertyDescriptor(a,e).enumerable})))),r.forEach((function(t){n(e,t,a[t])}))}return e}({},m,a),{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"attribute-extraction---asynchronous"},"Attribute Extraction - Asynchronous"),(0,r.kt)("p",null,"This API returns AI powered product tags asynchronously. We also support sending back responses to a client hosted callback URL when the response is ready.\nResponse structure of the get inference API and callback API are the same."),(0,r.kt)("h3",{id:"request"},"Request"),(0,r.kt)("h4",{id:"request-type"},"Request Type"),(0,r.kt)("p",null,"POST"),(0,r.kt)("h4",{id:"request-headers"},"Request Headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Content-Type: application/json\n")),(0,r.kt)("h4",{id:"endpoint"},"Endpoint"),(0,r.kt)("p",null,"The base URL will be provided to you at the time of onboarding."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"POST <base_url>/api/v1/infer\n")),(0,r.kt)("h4",{id:"request-parameters"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"correlation_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"Reference key to identify each request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents fields that are used by the inference service to infer data. This object should adhere to the schema definition.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"rules"),(0,r.kt)("td",{parentName:"tr",align:null},"list of objects"),(0,r.kt)("td",{parentName:"tr",align:null},"no"),(0,r.kt)("td",{parentName:"tr",align:null},"pass values to apply rules. We support predefined rules which applies on the output data. Example: If in a full body image, if the inference should be applied only if the value of the Category is Dress, we can pass this information in rules.")))),(0,r.kt)("h4",{id:"rule-object"},"Rule Object"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"predefined type of rule to be applied on the output or in the inference process")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Values"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"yes"),(0,r.kt)("td",{parentName:"tr",align:null},"values to be applied as an input to the rule execution.")))),(0,r.kt)("h4",{id:"supported-rules"},"Supported Rules"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"rule"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"force_taxonomy_hierarchy"),(0,r.kt)("td",{parentName:"tr",align:null},"When added, the extraction is enforced for this hierarchy.")))),(0,r.kt)("h3",{id:"response"},"Response"),(0,r.kt)("p",null,"The response will have reference mad_id for the request."),(0,r.kt)("h4",{id:"response-parameters"},"Response Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Params"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"correlation_id"),(0,r.kt)("td",{parentName:"tr",align:null},"Reference key sent in the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request_id"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mad_id"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique ID assigned to the image by our system and is returned in the response. Users can store this on their end and use it for reference (of an image/product)")))),(0,r.kt)("h4",{id:"response-status-code"},"Response Status Code"),(0,r.kt)("p",null,"Status codes indicate if the response was successful or not. For the different response codes we return, please refer\nthe table below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Status Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"200"),(0,r.kt)("td",{parentName:"tr",align:null},"Successful")))),(0,r.kt)("h4",{id:"error-response-parameters"},"Error Response Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"properties"),(0,r.kt)("th",{parentName:"tr",align:null},"datatype"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Status of the request. Allowed values: PENDING/SUCCESS/FAILURE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mad_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors"),(0,r.kt)("td",{parentName:"tr",align:null},"List of object"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents error encountered")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors","[0]","->code"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique code of the error returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors","[0]","->message"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the error message")))),(0,r.kt)("h3",{id:"request-to-get-the-extract-attributes-for-a-given-mad_id"},"Request to get the extract attributes for a given mad_id"),(0,r.kt)("p",null,"This API returns attributes once available."),(0,r.kt)("h4",{id:"request-type-1"},"Request Type"),(0,r.kt)("p",null,"POST"),(0,r.kt)("h4",{id:"request-headers-1"},"Request Headers"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Content-Type: application/json\n")),(0,r.kt)("h4",{id:"endpoint-1"},"Endpoint"),(0,r.kt)("p",null,"The base URL will be provided to you at the time of onboarding."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"POST <base_url>/<client>/api/v1/infer/:mad_id\n")),(0,r.kt)("h4",{id:"request-parameters-1"},"Request Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mad_id"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique ID assigned to the image by our system and is returned in the response. Users can store this on their end and use it for reference (of an image/product)"),(0,r.kt)("td",{parentName:"tr",align:null}),(0,r.kt)("td",{parentName:"tr",align:null})))),(0,r.kt)("h3",{id:"response-1"},"Response"),(0,r.kt)("p",null,"The response will have all the attributes extracted from the image."),(0,r.kt)("h4",{id:"response-parameters-1"},"Response Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"properties"),(0,r.kt)("th",{parentName:"tr",align:null},"datatype"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"version"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Version of inference graph used")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Status of the request. Allowed values: PENDING/SUCCESS/FAILURE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"request_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mad_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of a datapoint")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"input_data"),(0,r.kt)("td",{parentName:"tr",align:null},"object"),(0,r.kt)("td",{parentName:"tr",align:null},"Input data sent in the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output"),(0,r.kt)("td",{parentName:"tr",align:null},"List of objects"),(0,r.kt)("td",{parentName:"tr",align:null},"Inference result of every object identified")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]"," -> object_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of a object")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences"),(0,r.kt)("td",{parentName:"tr",align:null},"list of objects"),(0,r.kt)("td",{parentName:"tr",align:null},"Inference data for every object identified in the input data. Example, an image can contain shoes, bags, the models detects them and extracts relavant attribute and values for each of them.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Uniqueidentifier of an attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> name"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of an attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> hierarchy"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents hierarchy of the attribute in the taxonomy. Example, Color is an attribute that is defined for almost all objects that are models identify. We can detect color of a dress, bag etc. In this case, when the model detects color of a bag, then the hierarchy will be Category>Dress>Color")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> result"),(0,r.kt)("td",{parentName:"tr",align:null},"List of objects"),(0,r.kt)("td",{parentName:"tr",align:null},"Values derived for attribute. Our models can detect more than one value for an attribute. Example, pattern can be Animal Print with Stripes. This object will then return both the values with the associated confidence.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> result","[0]","->prediction"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Value predicted for attribute")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> result","[0]","-> prediction_box"),(0,r.kt)("td",{parentName:"tr",align:null},"array"),(0,r.kt)("td",{parentName:"tr",align:null},"Bounding box of the value")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"output","[0]","->inferences","[0]","-> result","[0]","-> confidence"),(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"confidence of the predicted value. Allowed values: ","[0..1]")))),(0,r.kt)("h4",{id:"response-status-code-1"},"Response Status Code"),(0,r.kt)("p",null,"Status codes indicate if the response was successful or not. For the different response codes we return, please refer\nthe table below:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Status Code"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"200"),(0,r.kt)("td",{parentName:"tr",align:null},"Successful")))),(0,r.kt)("h4",{id:"error-response-parameters-1"},"Error Response Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"properties"),(0,r.kt)("th",{parentName:"tr",align:null},"datatype"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"status"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Status of the request. Allowed values: PENDING/SUCCESS/FAILURE")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"mad_id"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique identifier of the request")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors"),(0,r.kt)("td",{parentName:"tr",align:null},"List of object"),(0,r.kt)("td",{parentName:"tr",align:null},"Represents error encountered")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors","[0]","->code"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Unique code of the error returned")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"errors","[0]","->message"),(0,r.kt)("td",{parentName:"tr",align:null},"string"),(0,r.kt)("td",{parentName:"tr",align:null},"Description of the error message")))),(0,r.kt)("h4",{id:"request-structure"},"Request Structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Json"},'POST <base_url>/api/v1/infer\n\n{\n   "correlation_id": "",\n   "input_data":{\n      "image_url":["http://tag.com/1.url", "http://tag.com/2.url"]\n   }\n}\n')),(0,r.kt)("h4",{id:"response-structure"},"Response Structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Json"},'200 OK\n\n{\n   "correlation_id": "",\n   "version":"",\n   "status":"",\n   "request_id":"",\n   "mad_id":""\n}\n')),(0,r.kt)("h4",{id:"request-structure-1"},"Request Structure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Json"},'GET <base_url>/api/v1/infer/:mad_id\n\n200 OK\n{\n   "correlation_id": "",\n   "version":"",\n   "status":"",\n   "request_id":"",\n   "mad_id":"",\n   "input_data":{\n      "image_url":["http://tag.com/1.url", "http://tag.com/2.url"]\n   }\n   "output":[{\n        "object_id":"",\n        "inferences":[{\n                "id":"",\n                "name":"",\n                "hierarchy":"",\n                "result":[{\n                    "confidence":"",\n                    "prediction":"",\n                    "prediction_box":""\n                }]\n        }]\n    }]\n}\n')))}k.isMDXComponent=!0}}]);